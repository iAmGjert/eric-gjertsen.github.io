// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(arr) {
  return arr.reduce(function(accumulator, element){
    return accumulator.concat(element);
  }, []);
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, test, update, body) {
  if (test(value)){
    body(value);
    return loop(update(value), test, update, body);
  } else {
    return value;
  };
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(arr, test) {
  for (let i = 0; i < arr.length; i++){
    if (test(arr[i]) === false){
      return false;
    };
  };
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  const arr = countBy(str, function(char){
    const unicode = char.charCodeAt();
    const script = characterScript(unicode);
    if (script !== null){
      return script.direction;
    } else {
      return script;
    };
  });
  arr.sort(function(a, b){
    return b.count - a.count;
  });
  return arr[0].name;
}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
